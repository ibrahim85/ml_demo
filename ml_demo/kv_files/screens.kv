#:import random random.random
#:import text_eng ml_demo.text.text_eng
<MainScreen>
    BoxLayout:
        id: main_screen
        orientation: 'horizontal'
        padding: 50, 50, 0, 0
        spacing: 50

        BoxLayout:
            orientation: 'vertical'
            spacing: 50

            GlobalLabel:
                id: title
                text: 'Machine Learning Demo'
                font_size: root.width * 0.001 * 80
                hint_size_y: None
                text_size: self.width, None
                height: self.texture_size[1]

            GlobalLabel:
                text: 'By Jamal Moir'
                font_size: root.width * 0.001 * 16
                text_size: self.size
                valign: 'top'

            GlobalLabel:
                text: text_eng['main_screen_text']
                font_size: root.width * 0.001 * 24
                text_size: self.size
                padding: 0, 20

        BoxLayout:
            id: right_menu
            orientation: 'vertical'
            size_hint_x: 0.25

            GlobalButton:
                text: 'Neural Network'
                size_hint: None, None
                size: right_menu.width, 40
                on_press: root.manager.current = 'nn_screen'

            GlobalButton:
                text: 'Decision Tree'
                size_hint: None, None
                size: right_menu.width, 40
                on_press: root.manager.current = 'dt_screen'


<NeuralNetworkScreen>
    lam: lam
    alpha: alpha
    epochs: epochs
    adaptive: adaptive
    dec_amount: dec_amount
    hidden_layer_size: hidden_layer_size
    train_test: train_test
    train_button: train_button
    predict_button: predict_button
    training_graph_button: training_graph_button
    nn_graphic: nn_graphic

    BoxLayout:
        id: nn_screen
        orientation: 'horizontal'
        padding: 0
        spacing: 50

        StackLayout:
            id: nn_menu
            orientation: 'tb-lr'
            spacing: 0
            padding: 0
            size_hint_x: 0.25

            canvas:
                Color:
                    rgba: 0.86, 0.82, 0.75, 1
                Rectangle:
                    pos: self.pos
                    size: self.size

            GlobalLabel:
                text: "Neural Network"
                text_size: self.size
                font_size: root.width * 0.001 * 18
                size_hint: None, None
                size: nn_menu.width, self.height
                bold: True
                padding: 5, 5
                valign: 'top'

            GlobalButton:
                text: 'Load Model'
                size_hint: None, None
                size: nn_menu.width, 40
                on_press: nn_screen.parent.show_load_model()

            GlobalButton:
                text: 'Load Training Data'
                size_hint: None, None
                size: nn_menu.width, 40
                on_press: nn_screen.parent.show_load_training_data()

            GlobalButton:
                text: 'Load Predicting Data'
                size_hint: None, None
                size: nn_menu.width, 40
                on_press: nn_screen.parent.show_load_predict_data()

            GlobalButton:
                text: 'Save Model'
                size_hint: None, None
                size: nn_menu.width, 40
                on_press: nn_screen.parent.show_save_model()

            GlobalButton:
                text: 'Clear'
                size_hint: None, None
                size: nn_menu.width, 40
                on_press: nn_screen.parent.clear()

        BoxLayout:
            id: nn_graphic
            orientation: 'vertical'

        BoxLayout:
            id: right_bar
            orientation: 'vertical'
            size_hint_x: 0.25
            spacing: 0

            BoxLayout:
                id: parameters
                orientation: 'vertical'
                padding: 10
                spacing: 10

                GlobalLabel:
                    text: 'Lambda: {}'.format(lam.value)
                    font_size: root.width * 0.001 * 14

                ParamSlider:
                    id: lam
                    min: 0
                    max: 0.1
                    value: 0.01
                    step: 0.005

                GlobalLabel:
                    text: 'Alpha: {}'.format(alpha.value)
                    font_size: root.width * 0.001 * 14

                ParamSlider:
                    id: alpha
                    min: 0
                    max: 1
                    value: 0.01
                    step: 0.005

                GlobalLabel:
                    text: 'Epochs: {}'.format(int(epochs.value))
                    font_size: root.width * 0.001 * 14

                ParamSlider:
                    id: epochs
                    min: 0
                    max: 10000
                    value: 500
                    step: 100

                GlobalLabel:
                    text: 'Adaptive: {}'.format(adaptive.value)
                    font_size: root.width * 0.001 * 14

                ParamSlider:
                    id: adaptive
                    min: 0
                    max: 0.005
                    value: 0.001
                    step: 0.0005

                GlobalLabel:
                    text: 'Decrease: {}'.format(dec_amount.value)
                    font_size: root.width * 0.001 * 14

                ParamSlider:
                    id: dec_amount
                    min: 0
                    max: 0.0005
                    value: 0.0001
                    step: 0.00005

                GlobalLabel:
                    text: 'Hidden Layer Size: {}'.format(int(hidden_layer_size.value))
                    font_size: root.width * 0.001 * 14

                ParamSlider:
                    id: hidden_layer_size
                    min: 0
                    max: 1000
                    value: 500
                    step: 50

                GlobalLabel:
                    text: 'Train/Test'
                    font_size: root.width * 0.001 * 14

                Switch:
                    id: train_test
                    active: True
                    padding: 50

            BoxLayout:
                id: right_menu
                orientation: 'vertical'

                GlobalButton:
                    id: train_button
                    text: 'Train'
                    size_hint: None, None
                    size: right_menu.width, 40
                    disabled: True
                    on_press: nn_screen.parent.begin_training()

                GlobalButton:
                    id: predict_button
                    text: 'Predict'
                    size_hint: None, None
                    size: right_menu.width, 40
                    disabled: True
                    on_press: nn_screen.parent.predict()

                GlobalButton:
                    id: training_graph_button
                    text: 'Training Graph'
                    size_hint: None, None
                    size: right_menu.width, 40
                    disabled: True
                    on_press: nn_screen.parent.display_training_graph()

                GlobalButton:
                    text: 'Back'
                    size_hint: None, None
                    size: right_menu.width, 40
                    on_press: root.manager.current = 'main_screen'

                GlobalButton:
                    text: 'Help'
                    size_hint: None, None
                    size: right_menu.width, 40
                    on_press: root.manager.current = 'nn_help'

<DecisionTreeScreen>
    train_test: train_test
    train_button: train_button
    predict_button: predict_button
    dt_graphic: dt_graphic

    BoxLayout:
        id: dt_screen
        orientation: 'horizontal'
        padding: 0
        spacing: 50

        StackLayout:
            id: dt_menu
            orientation: 'tb-lr'
            spacing: 0
            padding: 0
            size_hint_x: 0.25

            canvas:
                Color:
                    rgba: 0.86, 0.82, 0.75, 1
                Rectangle:
                    pos: self.pos
                    size: self.size

            GlobalLabel:
                text: "Decision Tree"
                text_size: self.size
                font_size: root.width * 0.001 * 18
                size_hint: None, None
                size: dt_menu.width, self.height
                bold: True
                padding: 5, 5
                valign: 'top'

            GlobalButton:
                text: 'Load Model'
                size_hint: None, None
                size: dt_menu.width, 40
                on_press: dt_screen.parent.show_load_model()

            GlobalButton:
                text: 'Load Training Data'
                size_hint: None, None
                size: dt_menu.width, 40
                on_press: dt_screen.parent.show_load_training_data()

            GlobalButton:
                text: 'Load Predicting Data'
                size_hint: None, None
                size: dt_menu.width, 40
                on_press: dt_screen.parent.show_load_predict_data()

            GlobalButton:
                text: 'Save Model'
                size_hint: None, None
                size: dt_menu.width, 40
                on_press: dt_screen.parent.show_save_model()

            GlobalButton:
                text: 'Clear'
                size_hint: None, None
                size: dt_menu.width, 40
                on_press: dt_screen.parent.clear()

        BoxLayout:
            id: dt_graphic
            orientation: 'vertical'

        BoxLayout:
            id: right_bar
            orientation: 'vertical'
            size_hint_x: 0.25
            spacing: 0

            BoxLayout:
                id: parameters
                orientation: 'vertical'
                padding: 10
                spacing: 10

                GlobalLabel:
                    text: 'Train/Test'
                    font_size: root.width * 0.001 * 14

                Switch:
                    id: train_test
                    active: True
                    padding: 50

            BoxLayout:
                id: right_menu
                orientation: 'vertical'

                GlobalButton:
                    id: train_button
                    text: 'Train'
                    size_hint: None, None
                    size: right_menu.width, 40
                    disabled: True
                    on_press: dt_screen.parent.begin_training()

                GlobalButton:
                    id: predict_button
                    text: 'Predict'
                    size_hint: None, None
                    size: right_menu.width, 40
                    disabled: True
                    on_press: dt_screen.parent.predict()

                GlobalButton:
                    text: 'Back'
                    size_hint: None, None
                    size: right_menu.width, 40
                    on_press: root.manager.current = 'main_screen'

                GlobalButton:
                    text: 'Help'
                    size_hint: None, None
                    size: right_menu.width, 40
                    on_press: root.manager.current = 'dt_help'

<HelpScreen>
    help_title: help_title
    help_text: help_text

    BoxLayout:
        id: help_screen
        orientation: 'horizontal'
        padding: 50, 50, 0, 0
        spacing: 50

        BoxLayout:
            orientation: 'vertical'
            spacing: 50

            GlobalLabel:
                id: help_title
                size_hint_y: 0.2
                text: ''
                font_size: root.width * 0.001 * 60
                text_size: self.size
                valign: 'top'

            GlobalLabel:
                id: help_text
                text: ''
                font_size: root.width * 0.001 * 16
                text_size: self.size
                padding: 0, 20
                valign: 'bottom'

        BoxLayout:
            id: right_menu
            orientation: 'vertical'
            size_hint_x: 0.25

            GlobalButton:
                text: 'Back'
                size_hint: None, None
                size: right_menu.width, 40
                on_press: root.manager.current = 'main_screen'

