#:import Transition kivy.uix.screenmanager.NoTransition

<GlobalLabel@Label>
    color: 0.22, 0.22, 0.22, 1
    font_size: 16

<GlobalButton@Button>
    background_color: 0.75, 0.70, 0.51, 1
    background_down: ''
    font_size: 20

<Sidebar@GridLayout>
    size_hint: 0.25, 1

<ParamSlider@Slider>
    cursor_size: 3, 3
    value_track_color: 0.75, 0.70, 0.51, 1
    value_track_width: 10
    padding: 0

<ScreenManager>
    transition: Transition()
    duration: 10
    canvas:
        Color:
            rgba: 0.96, 0.96, 0.96 , 1
        Rectangle:
            pos: self.pos
            size: self.size

<MainScreen>
    BoxLayout:
        id: main_screen
        orientation: 'horizontal'
        minimum_size: root.size
        pos: root.pos
        padding: [50, 50, 0, 0]
        spacing: 50

        BoxLayout:
            id: information
            orientation: 'vertical'

            GlobalLabel:
                id: title
                text: 'Machine Learning Demo'
                font_size: 80
                text_size: self.size
                halign: 'left'
                valign: 'top'

            GlobalLabel:
                id: author
                text: 'By Jamal Moir'
                font_size: 16
                text_size: self.size
                halign: 'left'
                valign: 'top'

            GlobalLabel:
                id: instructions
                text: 'Instructions:\nSelect a model from the menu to the right, enter or load data and experiment using the different algorithms to train models and make predictions, or load an already trained model to start using it to predict! If you need help click \'help\' at any time.'
                font_size: 24
                text_size: self.size
                halign: 'left'
                valign: 'top'


        AnchorLayout:
            id: right_menu
            anchor_x: 'right'
            anchor_y: 'bottom'
            orientation: 'vertical'
            size_hint_x: 0.25

            BoxLayout:
                orientation: 'vertical'

                GlobalButton:
                    id: neural-network
                    text: 'Neural Network'
                    size_hint: None, None
                    size: right_menu.width, 40
                    on_press:
                        root.manager.current = 'nn_screen'

                GlobalButton:
                    id: decision-tree
                    text: 'Decision Tree'
                    size_hint: None, None
                    size: right_menu.width, 40
                    on_press: print(self.text)

<NeuralNetworkScreen>
    BoxLayout:
        id: nn_screen
        orientation: 'horizontal'
        minimum_size: root.size
        pos: root.pos
        padding: 0
        spacing: 50

        StackLayout:
            id: nn_menu
            orientation: 'tb-lr'
            spacing: 0
            padding: 0
            size_hint_x: 0.25

            canvas:
                Color:
                    rgba: 0.86, 0.82, 0.75, 1
                Rectangle:
                    pos: self.pos
                    size: self.size

            GlobalLabel:
                id: nn_label
                text: "Neural Network"
                text_size: self.size
                font_size: 24
                size_hint: None, None
                size: nn_menu.width, self.height
                bold: True
                padding: 5, 5
                valign: 'top'
                halign: 'left'

            GlobalButton:
                id: load_model
                text: 'Load Model'
                size_hint: None, None
                size: nn_menu.width, 40

            GlobalButton:
                id: load_data
                text: 'Load Data'
                size_hint: None, None
                size: nn_menu.width, 40

            GlobalButton:
                id: enter_data
                text: 'Enter Data'
                size_hint: None, None
                size: nn_menu.width, 40

            GlobalButton:
                id: save_model
                text: 'Save Model'
                size_hint: None, None
                size: nn_menu.width, 40

            GlobalButton:
                id: clear
                text: 'Clear'
                size_hint: None, None
                size: nn_menu.width, 40


        BoxLayout:
            id: nn_graphic
            orientation: 'vertical'

        Sidebar:
            id: right_bar
            rows: 2

            AnchorLayout:
                id: parameters
                anchor_x: 'right'
                anchor_y: 'top'
                size_hint: 0.25, 0.5

                GridLayout:
                    orientation: 'vertical'
                    rows: 12
                    spacing: 0

                    GlobalLabel:
                        text: 'Lambda: {}'.format(lam.value)
                        valign: 'top'
                        halign: 'left'

                    ParamSlider:
                        id: lam
                        min: 0
                        max: 100
                        value: 0
                        step: 1

                    GlobalLabel:
                        text: 'Alpha: {}'.format(alpha.value)
                        valign: 'top'
                        halign: 'left'

                    ParamSlider:
                        id: alpha
                        min: 0
                        max: 100
                        value: 0
                        step: 1

                    GlobalLabel:
                        text: 'Epochs: {}'.format(epochs.value)
                        valign: 'top'
                        halign: 'left'

                    ParamSlider:
                        id: epochs
                        min: 0
                        max: 10000
                        value: 0
                        step: 100

                    GlobalLabel:
                        text: 'Adaptive: {}'.format(adaptive.value)
                        valign: 'top'
                        halign: 'left'

                    ParamSlider:
                        id: adaptive
                        min: 0
                        max: 100
                        value: 0
                        step: 1

                    GlobalLabel:
                        text: 'Decrease: {}'.format(dec_amount.value)
                        valign: 'top'
                        halign: 'left'

                    ParamSlider:
                        id: dec_amount
                        min: 0
                        max: 100
                        value: 0
                        step: 1

            AnchorLayout:
                id: right_menu
                anchor_x: 'right'
                anchor_y: 'bottom'
                orientation: 'vertical'
                size_hint: 0.25, 0.4

                BoxLayout:
                    orientation: 'vertical'

                    GlobalButton:
                        id: train_predict
                        text: 'Train'
                        size_hint: None, None
                        size: right_menu.width, 40
                        disabled: True
                        on_press: print(self.text)

                    GlobalButton:
                        id: training_graph
                        text: 'Training Graph'
                        size_hint: None, None
                        size: right_menu.width, 40
                        disabled: True
                        on_press: print(self.text)

                    GlobalButton:
                        id: back
                        text: 'Back'
                        size_hint: None, None
                        size: right_menu.width, 40
                        on_press:
                            root.manager.current = 'main_screen'

                    GlobalButton:
                        id: help
                        text: 'Help'
                        size_hint: None, None
                        size: right_menu.width, 40
                        on_press: print(self.text)
